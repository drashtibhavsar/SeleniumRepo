<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="10" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="60" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
    <groups>
      <group name="smoke">
        <method signature="Testing3.mainTest()[pri:2, instance:tests.Testing3@1e88b3c]" name="mainTest" class="tests.Testing3"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="Testing3.mainTest()[pri:2, instance:tests.Testing3@1e88b3c]" name="mainTest" class="tests.Testing3"/>
      </group> <!-- sanity -->
      <group name="drashti">
        <method signature="Testing3.endTest()[pri:3, instance:tests.Testing3@1e88b3c]" name="endTest" class="tests.Testing3"/>
      </group> <!-- drashti -->
    </groups>
    <test name="Test" duration-ms="60" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
      <class name="tests.Testing3">
        <test-method status="PASS" signature="homeTest()[pri:1, instance:tests.Testing3@1e88b3c]" name="homeTest" duration-ms="10" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homeTest -->
        <test-method status="FAIL" signature="endTest()[pri:3, instance:tests.Testing3@1e88b3c]" name="endTest" duration-ms="0" started-at="2020-02-08T18:51:37Z" depends-on-methods="tests.Testing3.mainTest" finished-at="2020-02-08T18:51:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [abc1] but found [abc]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [abc1] but found [abc]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at tests.Testing3.endTest(Testing3.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method status="PASS" signature="mainTest()[pri:2, instance:tests.Testing3@1e88b3c]" name="mainTest" duration-ms="0" started-at="2020-02-08T18:51:37Z" depends-on-methods="tests.Testing3.homeTest" finished-at="2020-02-08T18:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainTest -->
      </class> <!-- tests.Testing3 -->
      <class name="tests.Testing1">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:tests.Testing1@66a3ffec]" name="beforeSuite" is-config="true" duration-ms="5" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.Testing1@66a3ffec]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.Testing1@66a3ffec]" name="beforeClass" is-config="true" duration-ms="0" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:tests.Testing1@66a3ffec]" name="f" duration-ms="5" started-at="2020-02-08T18:51:37Z" data-provider="dp" finished-at="2020-02-08T18:51:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.Testing1@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.Testing1@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.Testing1@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:tests.Testing1@66a3ffec]" name="f" duration-ms="5" started-at="2020-02-08T18:51:37Z" data-provider="dp" finished-at="2020-02-08T18:51:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.Testing1@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.Testing1@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="test1()[pri:0, instance:tests.Testing1@66a3ffec]" name="test1" duration-ms="0" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.Testing1@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.Testing1@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.Testing1@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="test2()[pri:0, instance:tests.Testing1@66a3ffec]" name="test2" duration-ms="0" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.Testing1@66a3ffec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test3()[pri:0, instance:tests.Testing1@66a3ffec]" name="test3" duration-ms="9" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.Testing1@66a3ffec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:tests.Testing1@66a3ffec]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.Testing1@66a3ffec]" name="afterTest" is-config="true" duration-ms="0" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:tests.Testing1@66a3ffec]" name="afterSuite" is-config="true" duration-ms="4" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.Testing1 -->
      <class name="tests.Testing2">
        <test-method status="PASS" signature="test4()[pri:0, instance:tests.Testing2@77caeb3e]" name="test4" duration-ms="0" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test5()[pri:0, instance:tests.Testing2@77caeb3e]" name="test5" duration-ms="0" started-at="2020-02-08T18:51:37Z" finished-at="2020-02-08T18:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
      </class> <!-- tests.Testing2 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
